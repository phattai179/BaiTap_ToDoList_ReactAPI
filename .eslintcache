[{"D:\\Nhap_HTML\\DoPhatTai_BaiTapToDoList_ReactAPI\\baitap_todolist_react_api\\src\\index.js":"1","D:\\Nhap_HTML\\DoPhatTai_BaiTapToDoList_ReactAPI\\baitap_todolist_react_api\\src\\App.js":"2","D:\\Nhap_HTML\\DoPhatTai_BaiTapToDoList_ReactAPI\\baitap_todolist_react_api\\src\\reportWebVitals.js":"3","D:\\Nhap_HTML\\DoPhatTai_BaiTapToDoList_ReactAPI\\baitap_todolist_react_api\\src\\Redux\\Reducer\\rootReducer.js":"4","D:\\Nhap_HTML\\DoPhatTai_BaiTapToDoList_ReactAPI\\baitap_todolist_react_api\\src\\BaiTapDoToList_StyleComponent\\BaiTapToDoList\\ToDoList.js":"5","D:\\Nhap_HTML\\DoPhatTai_BaiTapToDoList_ReactAPI\\baitap_todolist_react_api\\src\\BaiTapDoToList_StyleComponent\\Theme\\ToDoListDarkTheme.js":"6","D:\\Nhap_HTML\\DoPhatTai_BaiTapToDoList_ReactAPI\\baitap_todolist_react_api\\src\\BaiTapDoToList_StyleComponent\\Theme\\ToDoListPrimaryTheme.js":"7","D:\\Nhap_HTML\\DoPhatTai_BaiTapToDoList_ReactAPI\\baitap_todolist_react_api\\src\\BaiTapDoToList_StyleComponent\\Theme\\ToDoListLightTheme.js":"8","D:\\Nhap_HTML\\DoPhatTai_BaiTapToDoList_ReactAPI\\baitap_todolist_react_api\\src\\BaiTapDoToList_StyleComponent\\Components\\Container.js":"9","D:\\Nhap_HTML\\DoPhatTai_BaiTapToDoList_ReactAPI\\baitap_todolist_react_api\\src\\BaiTapDoToList_StyleComponent\\Components\\Dropdown.js":"10","D:\\Nhap_HTML\\DoPhatTai_BaiTapToDoList_ReactAPI\\baitap_todolist_react_api\\src\\BaiTapDoToList_StyleComponent\\Components\\TextField.js":"11","D:\\Nhap_HTML\\DoPhatTai_BaiTapToDoList_ReactAPI\\baitap_todolist_react_api\\src\\BaiTapDoToList_StyleComponent\\Components\\Button.js":"12","D:\\Nhap_HTML\\DoPhatTai_BaiTapToDoList_ReactAPI\\baitap_todolist_react_api\\src\\BaiTapDoToList_StyleComponent\\Components\\Heading.js":"13","D:\\Nhap_HTML\\DoPhatTai_BaiTapToDoList_ReactAPI\\baitap_todolist_react_api\\src\\BaiTapDoToList_StyleComponent\\Components\\Table.js":"14","D:\\Nhap_HTML\\DoPhatTai_BaiTapToDoList_ReactAPI\\baitap_todolist_react_api\\src\\Redux\\Reducer\\ToDoListReducer.js":"15","D:\\Nhap_HTML\\DoPhatTai_BaiTapToDoList_ReactAPI\\baitap_todolist_react_api\\src\\BaiTapDoToList_StyleComponent\\Theme\\ThemeManager.js":"16","D:\\Nhap_HTML\\DoPhatTai_BaiTapToDoList_ReactAPI\\baitap_todolist_react_api\\src\\Redux\\Action\\ToDoListAction.js":"17","D:\\Nhap_HTML\\DoPhatTai_BaiTapToDoList_ReactAPI\\baitap_todolist_react_api\\src\\Redux\\Type\\ToDoListType.js":"18"},{"size":679,"mtime":1608785886723,"results":"19","hashOfConfig":"20"},{"size":242,"mtime":1608786473005,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"20"},{"size":163,"mtime":1608888049452,"results":"23","hashOfConfig":"20"},{"size":13100,"mtime":1609216386096,"results":"24","hashOfConfig":"20"},{"size":241,"mtime":1608800252954,"results":"25","hashOfConfig":"20"},{"size":242,"mtime":1608788216928,"results":"26","hashOfConfig":"20"},{"size":243,"mtime":1608791118224,"results":"27","hashOfConfig":"20"},{"size":504,"mtime":1608789105416,"results":"28","hashOfConfig":"20"},{"size":712,"mtime":1608799967138,"results":"29","hashOfConfig":"20"},{"size":577,"mtime":1608790479081,"results":"30","hashOfConfig":"20"},{"size":565,"mtime":1608896518175,"results":"31","hashOfConfig":"20"},{"size":846,"mtime":1595871248000,"results":"32","hashOfConfig":"20"},{"size":1255,"mtime":1595916570000,"results":"33","hashOfConfig":"20"},{"size":3537,"mtime":1608898020975,"results":"34","hashOfConfig":"20"},{"size":399,"mtime":1608890631817,"results":"35","hashOfConfig":"20"},{"size":647,"mtime":1608895802787,"results":"36","hashOfConfig":"20"},{"size":238,"mtime":1608895665004,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"10njmu6",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"D:\\Nhap_HTML\\DoPhatTai_BaiTapToDoList_ReactAPI\\baitap_todolist_react_api\\src\\index.js",[],["79","80"],"D:\\Nhap_HTML\\DoPhatTai_BaiTapToDoList_ReactAPI\\baitap_todolist_react_api\\src\\App.js",["81"],"import logo from './logo.svg';\nimport './App.css';\nimport ToDoList from './BaiTapDoToList_StyleComponent/BaiTapToDoList/ToDoList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <ToDoList/>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\Nhap_HTML\\DoPhatTai_BaiTapToDoList_ReactAPI\\baitap_todolist_react_api\\src\\reportWebVitals.js",[],"D:\\Nhap_HTML\\DoPhatTai_BaiTapToDoList_ReactAPI\\baitap_todolist_react_api\\src\\Redux\\Reducer\\rootReducer.js",[],"D:\\Nhap_HTML\\DoPhatTai_BaiTapToDoList_ReactAPI\\baitap_todolist_react_api\\src\\BaiTapDoToList_StyleComponent\\BaiTapToDoList\\ToDoList.js",["82","83","84","85","86","87","88","89","90","91","92"],"import React, { Component } from 'react'\r\nimport { Container } from '../Components/Container'\r\nimport { ThemeProvider } from 'styled-components'\r\nimport { ToDoListDarkTheme } from '../Theme/ToDoListDarkTheme'\r\nimport { ToDoListLightTheme } from '../Theme/ToDoListLightTheme'\r\nimport { ToDoListPrimaryTheme } from '../Theme/ToDoListPrimaryTheme'\r\nimport { Dropdown } from '../Components/Dropdown'\r\nimport { Input, Label, TextField } from '../Components/TextField'\r\nimport { Button } from '../Components/Button'\r\nimport { Heading3, Heading5, Heading4 } from '../Components/Heading'\r\nimport { Table, Td, Thead, Tr, Th } from '../Components/Table'\r\nimport { connect } from 'react-redux'\r\nimport { arrTheme } from '../Theme/ThemeManager'\r\nimport { addTaskAction, changeThemeAction, deleteTaskAction, doneTaskAction, editTaskAction, updateTaskAction } from '../../Redux/Action/ToDoListAction'\r\n\r\nimport Axios from 'axios'\r\n\r\nclass ToDoList extends Component {\r\n\r\n    state = {\r\n        taskName: '',\r\n        disabled: true,\r\n        taskList: [\r\n\r\n        ],\r\n\r\n        values: {\r\n            taskName: \"\",\r\n        },\r\n\r\n        error: {\r\n            taskName: \"\",\r\n        }\r\n    }\r\n\r\n    renderTaskToDo = () => {\r\n        return this.state.taskList.filter(task => !task.status).map((task, index) => {\r\n            return <Tr key={index}>\r\n                <Th style={{ verticalAlign: \"middle\" }} >{task.taskName}</Th>\r\n                <Th className=\"text-right\" >\r\n                    <Button onClick={() => {\r\n\r\n                        this.setState({\r\n                            disabled: false\r\n                        }, () => {\r\n                            this.props.dispatch(editTaskAction(task))\r\n                        })\r\n\r\n                    }} className=\"ml-1\" ><i class=\"fa fa-edit\"></i></Button>\r\n\r\n\r\n                    <Button type = \"button\" onClick={() => {\r\n                        this.checkTask(task.taskName)\r\n                    }} className=\"ml-1\" ><i class=\"fa fa-check\"></i></Button>\r\n\r\n\r\n                    <Button type = \"button\" onClick={() => {\r\n                        this.delTask(task.taskName)\r\n                    }} className=\"ml-1\" ><i class=\"fa fa-trash-alt\"></i></Button>\r\n                </Th>\r\n            </Tr>\r\n\r\n        })\r\n    }\r\n\r\n    renderTaskCompleted = () => {\r\n        return this.state.taskList.filter(task => task.status).map((task, index) => {\r\n            return <Tr key={index}>\r\n                <Th style={{ verticalAlign: \"middle\" }} >{task.taskName}</Th>\r\n                <Th className=\"text-right\">\r\n                    <Button type = \"button\" onClick={() => {\r\n                        this.delTask(task.taskName)\r\n                    }} ><i class=\"fa fa-trash-alt\"></i></Button>\r\n                    <Button className = \"ml-1\" type = \"button\" onClick={() => {\r\n                        this.rejectTask(task.taskName)\r\n                    }} ><i class=\"fa fa-undo\"></i></Button>\r\n                </Th>\r\n            </Tr>\r\n        })\r\n    }\r\n\r\n    getTaskList = () => {\r\n        let promise = Axios({\r\n            url: 'http://svcy.myclass.vn/api/ToDoList/GetAllTask',\r\n            method: 'GET',\r\n        })\r\n\r\n        promise.then((result) => {\r\n            console.log(result.data)\r\n            // Nếu gọi API lấy về kết quả thành công \r\n            // Set lại state của component\r\n            this.setState({\r\n                taskList: result.data\r\n            })\r\n        })\r\n\r\n        promise.catch((err) => {\r\n            console.log(err.response.data)\r\n            console.log('thất bại')\r\n        })\r\n    }\r\n\r\n    // Viết hàm renderTheme\r\n\r\n    renderTheme = () => {\r\n        return arrTheme.map((theme, index) => {\r\n            return <option value={theme.id} key={index}>\r\n                {theme.name}\r\n            </option>\r\n        })\r\n    }\r\n\r\n    // Hàm xử lý change nhập liệu\r\n    handleChange = (e) => {\r\n        let { value, name } = e.target;\r\n\r\n        // Xử lý sét giá trị nhập liệu mới\r\n        let newValues = { ...this.state.values };\r\n        newValues = { ...newValues, [name]: value };\r\n\r\n        // Xử lý lỗi\r\n        let newError = { ...this.state.error }\r\n\r\n        let regexString = /^[a-z A-z]+$/\r\n\r\n        if (value.trim() === \"\") {\r\n            newError[name] = name + \"is require\"\r\n        } else {\r\n            newError[name] = \"\"\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            values: newValues,\r\n            error: newError\r\n        }, () => {\r\n            console.log(this.state.values)\r\n            console.log(this.state.error)\r\n        })\r\n    }\r\n\r\n    // Hàm thêm task\r\n    addTask = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state.values.taskName)\r\n\r\n        let promise = Axios({\r\n            url: 'http://svcy.myclass.vn/api/ToDoList/AddTask',\r\n            method: 'POST',\r\n            data: {taskName: this.state.values.taskName}\r\n\r\n        })\r\n\r\n        // Xử lý hàm thành công\r\n        promise.then(result => {\r\n            console.log(result.data);\r\n            this.getTaskList();\r\n            // alert(\"addtask success\")\r\n        })\r\n\r\n        // Xử lý thất bại\r\n        promise.catch(errors => {\r\n            console.log(errors.response.data)\r\n            alert('task is exits')\r\n        })\r\n\r\n    }\r\n\r\n    // Hàm xóa task\r\n    delTask = (taskName) => {\r\n\r\n        let promise = Axios({\r\n            url: `http://svcy.myclass.vn/api/ToDoList/deleteTask?taskName=${taskName}`,\r\n            method: 'DELETE'\r\n        });\r\n\r\n        promise.then(result => {\r\n            alert(result.data)\r\n            this.getTaskList()\r\n        });\r\n\r\n        promise.catch(errors => {\r\n            alert(errors.response.data)\r\n        })\r\n    }\r\n\r\n    // Xử lý doneTask\r\n    checkTask = (taskName) => {\r\n        let promise = Axios({\r\n            url: `http://svcy.myclass.vn/api/ToDoList/doneTask?taskName=${taskName}`,\r\n            method: 'PUT'\r\n        })\r\n\r\n        promise.then(result => {\r\n            alert(result.data)\r\n            this.getTaskList()\r\n        })\r\n\r\n        promise.catch(err => {\r\n            alert(err.response.data)\r\n        })\r\n    }\r\n\r\n    // Xử lý rejectTask \r\n    rejectTask = (taskName) => {\r\n        let promise = Axios({\r\n            url: `http://svcy.myclass.vn/api/ToDoList/rejectTask?taskName=${taskName}`,\r\n            method: 'PUT'\r\n        })\r\n\r\n        promise.then(result => {\r\n            alert(result.data)\r\n            this.getTaskList()\r\n        })\r\n\r\n        promise.catch(err => {\r\n            alert(err.response.data);\r\n        })\r\n    }\r\n\r\n    // Lifecycle bảng dưới 16.4 nhận vào props mới được thực thi trước render\r\n    // componentWillReceiveProps(newProps){\r\n    //     this.setState({\r\n    //         taskName: newProps.taskEdit.taskName\r\n    //     })\r\n    // }\r\n\r\n    // // Lifecycle tĩnh không truy xuất được trỏ this\r\n    // static getDerivedStateFromProps(newProps, currentState) {\r\n\r\n    //     // newProps: là props mới, props cũ là this.props (không truy xuất được)\r\n    //     // CurrentState ứng với state hiện tại this.state\r\n\r\n    //     // Hoặc trả về state mới (this.state)\r\n    //     let newState = { ...currentState, taskName: newProps.taskEdit.taskName }\r\n\r\n    //     return newState\r\n    //     // trả về null state giữ nguyên\r\n    //     //return null\r\n    // }\r\n\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <ThemeProvider theme={this.props.themeToDoList}>\r\n                <Container>\r\n                    <form onSubmit = {this.addTask}>\r\n                        {/* <Button onClick={this.getTaskList}>Get taskList</Button> */}\r\n                        <Dropdown onChange={(e) => {\r\n                            let { value } = e.target\r\n\r\n                            // Gửi value lên dispatch để thực hiện thay đổi redux\r\n                            this.props.dispatch(changeThemeAction(value))\r\n\r\n                        }}>\r\n\r\n                            {this.renderTheme()}\r\n                            {/* <option>Dark Theme</option>\r\n                        <option>Light Theme</option>\r\n                        <option>Primary Theme</option> */}\r\n                        </Dropdown>\r\n                        <Heading3>To do list</Heading3>\r\n                        {/* <Label>Task name</Label>\r\n                    <br></br>\r\n                    <Input className = \"w-50\" ></Input> */}\r\n\r\n                        <TextField name=\"taskName\" onChange={this.handleChange} lable=\"Task name\" className=\"w-50\" ></TextField>\r\n                        <Heading4 className=\"text-danger\" >{this.state.error.taskName}</Heading4>\r\n\r\n                        <Button type=\"submit\" onClick={this.addTask} className=\"ml-2\"><i class=\"fa fa-plus\"></i> Add task</Button>\r\n\r\n                        {this.state.disabled ?\r\n                            <Button disabled onClick={() => {\r\n                                this.props.dispatch(updateTaskAction(this.state.taskName))\r\n                            }} className=\"ml-2\" ><i class=\"fa fa-upload\"></i> Update Task</Button> :\r\n\r\n                            <Button onClick={() => {\r\n\r\n                                let { taskName } = this.state\r\n                                this.setState({\r\n                                    disabled: true,\r\n                                    taskName: ''\r\n                                }, () => {\r\n                                    this.props.dispatch(updateTaskAction(taskName))\r\n                                })\r\n\r\n\r\n                            }} className=\"ml-2\" ><i class=\"fa fa-upload\"></i> Update Task</Button>\r\n                        }\r\n\r\n\r\n                        <hr></hr>\r\n                        <Heading3>Task to do</Heading3>\r\n                        <Table>\r\n                            <Thead>\r\n                                {this.renderTaskToDo()}\r\n                                {/* <Tr>\r\n                                <Th style={{ verticalAlign: \"middle\" }} >Task name</Th>\r\n                                <Th className=\"text-right\" >\r\n                                    <Button className=\"ml-1\" ><i class=\"fa fa-edit\"></i></Button>\r\n                                    <Button className=\"ml-1\" ><i class=\"fa fa-check\"></i></Button>\r\n                                    <Button className=\"ml-1\" ><i class=\"fa fa-trash-alt\"></i></Button>\r\n                                </Th>\r\n                            </Tr>\r\n\r\n                            <Tr>\r\n                                <Th style={{ verticalAlign: \"middle\" }} >Task name</Th>\r\n                                <Th className=\"text-right\" >\r\n                                    <Button className=\"ml-1\" ><i class=\"fa fa-edit\"></i></Button>\r\n                                    <Button className=\"ml-1\" ><i class=\"fa fa-check\"></i></Button>\r\n                                    <Button className=\"ml-1\" ><i class=\"fa fa-trash-alt\"></i></Button>\r\n                                </Th>\r\n                            </Tr> */}\r\n\r\n                            </Thead>\r\n                        </Table>\r\n\r\n                        <Heading3>Task completed</Heading3>\r\n                        <Table>\r\n                            <Thead>\r\n                                {this.renderTaskCompleted()}\r\n                                {/* <Tr>\r\n                                <Th style={{ verticalAlign: \"middle\" }} >Task name</Th>\r\n                                <Th className=\"text-right\">\r\n                                    <Button><i class=\"fa fa-trash-alt\"></i></Button>\r\n                                </Th>\r\n                            </Tr>\r\n\r\n                            <Tr>\r\n                                <Th style={{ verticalAlign: \"middle\" }} >Task name</Th>\r\n                                <Th className=\"text-right\">\r\n                                    <Button><i class=\"fa fa-trash-alt\"></i></Button>\r\n                                </Th>\r\n                            </Tr> */}\r\n                            </Thead>\r\n                        </Table>\r\n\r\n                    </form>\r\n\r\n                </Container>\r\n            </ThemeProvider>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getTaskList()\r\n    }\r\n\r\n    // Đây là lifecycle trả về props cũ và state cũ của component trước khi render. Nhưng licycle này chạy sau render\r\n    componentDidUpdate(prevProps, prevState) {\r\n        // So sánh nếu như props trước đó mà (taskEdit trước mà khác taskEdit hiện tại thì mình mới setState)\r\n\r\n        if (prevProps.taskEdit.id !== this.props.taskEdit.id) {\r\n            this.setState({\r\n                taskName: this.props.taskEdit.taskName\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        taskList: state.ToDoListReducer.taskList,\r\n        themeToDoList: state.ToDoListReducer.themeToDoList,\r\n        taskEdit: state.ToDoListReducer.taskEdit\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ToDoList)","D:\\Nhap_HTML\\DoPhatTai_BaiTapToDoList_ReactAPI\\baitap_todolist_react_api\\src\\BaiTapDoToList_StyleComponent\\Theme\\ToDoListDarkTheme.js",[],"D:\\Nhap_HTML\\DoPhatTai_BaiTapToDoList_ReactAPI\\baitap_todolist_react_api\\src\\BaiTapDoToList_StyleComponent\\Theme\\ToDoListPrimaryTheme.js",[],"D:\\Nhap_HTML\\DoPhatTai_BaiTapToDoList_ReactAPI\\baitap_todolist_react_api\\src\\BaiTapDoToList_StyleComponent\\Theme\\ToDoListLightTheme.js",[],"D:\\Nhap_HTML\\DoPhatTai_BaiTapToDoList_ReactAPI\\baitap_todolist_react_api\\src\\BaiTapDoToList_StyleComponent\\Components\\Container.js",[],"D:\\Nhap_HTML\\DoPhatTai_BaiTapToDoList_ReactAPI\\baitap_todolist_react_api\\src\\BaiTapDoToList_StyleComponent\\Components\\Dropdown.js",[],"D:\\Nhap_HTML\\DoPhatTai_BaiTapToDoList_ReactAPI\\baitap_todolist_react_api\\src\\BaiTapDoToList_StyleComponent\\Components\\TextField.js",["93"],"import styled from 'styled-components'\r\nimport React,{Fragment} from 'react'\r\n\r\nexport const Input = styled.input`\r\n    border: 1px solid ${props => props.theme.color};\r\n    min-height: 35px;\r\n    height: 35px;\r\n    font-size: 17px:\r\n    width: auto;\r\n    display: initial;\r\n`\r\n\r\nexport const Label = styled.span`\r\n    color: ${props => props.theme.color};\r\n    width: auto;\r\n`\r\n\r\nexport const TextField = ({lable, ...props}) => {\r\n    return <span>\r\n        <Label>\r\n            {lable}\r\n        </Label>\r\n        <br></br>\r\n        <Input {...props} ></Input>\r\n    </span>\r\n}","D:\\Nhap_HTML\\DoPhatTai_BaiTapToDoList_ReactAPI\\baitap_todolist_react_api\\src\\BaiTapDoToList_StyleComponent\\Components\\Button.js",[],"D:\\Nhap_HTML\\DoPhatTai_BaiTapToDoList_ReactAPI\\baitap_todolist_react_api\\src\\BaiTapDoToList_StyleComponent\\Components\\Heading.js",[],"D:\\Nhap_HTML\\DoPhatTai_BaiTapToDoList_ReactAPI\\baitap_todolist_react_api\\src\\BaiTapDoToList_StyleComponent\\Components\\Table.js",[],"D:\\Nhap_HTML\\DoPhatTai_BaiTapToDoList_ReactAPI\\baitap_todolist_react_api\\src\\Redux\\Reducer\\ToDoListReducer.js",["94"],"import { ToDoListDarkTheme } from \"../../BaiTapDoToList_StyleComponent/Theme/ToDoListDarkTheme\"\r\nimport { ADD_TASK, CHANGE_THEME, DELETE_TASK, DONE_TASK, EDIT_TASK, UPDATE_TASK } from \"../Type/ToDoListType\"\r\nimport { arrTheme } from '../../BaiTapDoToList_StyleComponent/Theme/ThemeManager'\r\n\r\nconst stateDefault = {\r\n    taskList: [\r\n        { id: 'task-1', taskName: 'task 1', done: true },\r\n        { id: 'task-2', taskName: 'task 2', done: false },\r\n        { id: 'task-3', taskName: 'task 3', done: true },\r\n        { id: 'task-4', taskName: 'task 4', done: false },\r\n    ],\r\n\r\n    themeToDoList: ToDoListDarkTheme,\r\n    taskEdit: { id: '-1', taskName: '', done: true },\r\n\r\n}\r\n\r\nexport const ToDoListReducer = (state = stateDefault, action) => {\r\n    switch (action.type) {\r\n\r\n        case CHANGE_THEME: {\r\n\r\n            let themeChange = arrTheme.find(theme => theme.id == action.themeId);\r\n\r\n            if (themeChange) {\r\n                state.themeToDoList = themeChange.theme\r\n            }\r\n\r\n            return { ...state }\r\n\r\n        }\r\n\r\n        case ADD_TASK: {\r\n\r\n            // Kiểm tra rổng\r\n            if (action.newTask.taskName.trim() === '') {\r\n                alert('TaskName is required')\r\n                return { ...state }\r\n            }\r\n\r\n            // Kiểm tra tồn tại\r\n            let taskListUpdate = [...state.taskList]\r\n            let index = taskListUpdate.findIndex(task => task.taskName === action.newTask.taskName)\r\n\r\n            if (index !== -1) {\r\n                alert('taskName is exist')\r\n                return { ...state }\r\n            }\r\n\r\n            taskListUpdate.push(action.newTask)\r\n\r\n            state.taskList = taskListUpdate\r\n\r\n            return { ...state }\r\n        }\r\n\r\n        case DONE_TASK: {\r\n\r\n            let taskListUpdate = [...state.taskList]\r\n\r\n            let index = taskListUpdate.findIndex(task => task.taskName === action.taskName)\r\n\r\n            if (index !== -1) {\r\n                taskListUpdate[index].done = true\r\n            }\r\n\r\n            return { ...state, taskList: taskListUpdate }\r\n        }\r\n\r\n        case DELETE_TASK: {\r\n\r\n            // let taskListUpdate = [...state.taskList]\r\n\r\n            // taskListUpdate = taskListUpdate.filter(task => task.id !== action.taskId)\r\n\r\n            // return {...state, taskList: taskListUpdate}\r\n\r\n            return { ...state, taskList: state.taskList.filter(task => task.id !== action.taskId) }\r\n        }\r\n\r\n        case EDIT_TASK : {\r\n            state.taskEdit = action.task\r\n            return {...state}\r\n        }\r\n\r\n        case UPDATE_TASK : {\r\n            // C1\r\n            // let taskListUpdate = [...state.taskList]\r\n\r\n            // let index = taskListUpdate.findIndex(task => task.taskName === state.taskEdit.taskName)\r\n\r\n            // if(index){\r\n            //     taskListUpdate[index].taskName = action.taskName\r\n            // }\r\n\r\n            //C2\r\n            state.taskEdit = {...state.taskEdit,taskName: action.taskName}\r\n\r\n            let taskListUpdate = [...state.taskList]\r\n\r\n            let index = taskListUpdate.findIndex(task => task.id === state.taskEdit.id)\r\n\r\n            if(index !== -1) {\r\n                taskListUpdate[index] = state.taskEdit\r\n            }\r\n\r\n            // state.taskEdit.id = \"-1\"\r\n            // state.taskEdit.taskName = '';\r\n\r\n            state.taskEdit = {id: '-1', taskName: '', done: false}\r\n\r\n            return {...state, taskList: taskListUpdate}\r\n        }\r\n\r\n        default:\r\n            return { ...state }\r\n    }\r\n}\r\n","D:\\Nhap_HTML\\DoPhatTai_BaiTapToDoList_ReactAPI\\baitap_todolist_react_api\\src\\BaiTapDoToList_StyleComponent\\Theme\\ThemeManager.js",[],"D:\\Nhap_HTML\\DoPhatTai_BaiTapToDoList_ReactAPI\\baitap_todolist_react_api\\src\\Redux\\Action\\ToDoListAction.js",[],"D:\\Nhap_HTML\\DoPhatTai_BaiTapToDoList_ReactAPI\\baitap_todolist_react_api\\src\\Redux\\Type\\ToDoListType.js",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":1,"column":8,"nodeType":"101","messageId":"102","endLine":1,"endColumn":12},{"ruleId":"99","severity":1,"message":"103","line":4,"column":10,"nodeType":"101","messageId":"102","endLine":4,"endColumn":27},{"ruleId":"99","severity":1,"message":"104","line":5,"column":10,"nodeType":"101","messageId":"102","endLine":5,"endColumn":28},{"ruleId":"99","severity":1,"message":"105","line":6,"column":10,"nodeType":"101","messageId":"102","endLine":6,"endColumn":30},{"ruleId":"99","severity":1,"message":"106","line":8,"column":10,"nodeType":"101","messageId":"102","endLine":8,"endColumn":15},{"ruleId":"99","severity":1,"message":"107","line":8,"column":17,"nodeType":"101","messageId":"102","endLine":8,"endColumn":22},{"ruleId":"99","severity":1,"message":"108","line":10,"column":20,"nodeType":"101","messageId":"102","endLine":10,"endColumn":28},{"ruleId":"99","severity":1,"message":"109","line":11,"column":17,"nodeType":"101","messageId":"102","endLine":11,"endColumn":19},{"ruleId":"99","severity":1,"message":"110","line":14,"column":10,"nodeType":"101","messageId":"102","endLine":14,"endColumn":23},{"ruleId":"99","severity":1,"message":"111","line":14,"column":44,"nodeType":"101","messageId":"102","endLine":14,"endColumn":60},{"ruleId":"99","severity":1,"message":"112","line":14,"column":62,"nodeType":"101","messageId":"102","endLine":14,"endColumn":76},{"ruleId":"99","severity":1,"message":"113","line":124,"column":13,"nodeType":"101","messageId":"102","endLine":124,"endColumn":24},{"ruleId":"99","severity":1,"message":"114","line":2,"column":15,"nodeType":"101","messageId":"102","endLine":2,"endColumn":23},{"ruleId":"115","severity":1,"message":"116","line":23,"column":63,"nodeType":"117","messageId":"118","endLine":23,"endColumn":65},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'ToDoListDarkTheme' is defined but never used.","'ToDoListLightTheme' is defined but never used.","'ToDoListPrimaryTheme' is defined but never used.","'Input' is defined but never used.","'Label' is defined but never used.","'Heading5' is defined but never used.","'Td' is defined but never used.","'addTaskAction' is defined but never used.","'deleteTaskAction' is defined but never used.","'doneTaskAction' is defined but never used.","'regexString' is assigned a value but never used.","'Fragment' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]